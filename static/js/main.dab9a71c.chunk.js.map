{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Loader/Loader.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/Modal/Modal.js","components/Button/Button.js","App.js","components/APIservice/api-service.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","searchQuery","handleNameChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","className","s","searchbar","searchForm","this","type","searchForm__button","searchForm__button_label","searchForm__input","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","images","onOpenModal","map","webformatURL","tags","largeImageURL","item","src","alt","onClick","image","shortid","ImageGallery","gallery","Spinner","loader","color","height","width","timeout","Modal","closeModalByEscape","key","onClickByEscape","window","addEventListener","removeEventListener","largeModalImg","onCloseModal","overlay","modal","Button","text","scrollTo","top","document","documentElement","scrollHeight","behavior","button","App","page","status","error","largeImage","isOpenModal","handleSearchbarSubmit","onLoadMoreClick","prevState","handleCloseModal","target","nodeName","handleCloseModalByEscape","handleOpenModal","dataset","source","prevProps","fetch","then","response","ok","json","Promise","reject","Error","fetchImages","hits","catch","length","message","newestOnTop","rtl","pauseOnFocusLoss","ReactDOM","render","StrictMode","querySelector"],"mappings":"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","file":"static/js/main.dab9a71c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ImageGalleryItem_item__N3514\",\"image\":\"ImageGalleryItem_image__1pnju\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__2q2h5\",\"modal\":\"Modal_modal__1wNfO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"ImageGallery_gallery__3w8Nj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2HNJ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2nHGs\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport s from './Searchbar.module.css';\n\nexport default class Searchbar extends Component {\n  static propTypes = {\n    searchQuery: PropTypes.string,\n  };\n\n  state = {\n    searchQuery: '',\n  };\n\n  handleNameChange = e => {\n    this.setState({\n      searchQuery: e.currentTarget.value.toLowerCase(),\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.searchQuery.trim() === '') {\n      toast.info('Введите поисковый запрос!', {\n        position: 'top-center',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      return;\n    }\n    this.props.onSubmit(this.state.searchQuery);\n    this.setState({ searchQuery: '' });\n  };\n\n  render() {\n    return (\n      <header className={s.searchbar}>\n        <form className={s.searchForm} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={s.searchForm__button}>\n            <span className={s.searchForm__button_label}>Search</span>\n          </button>\n          <input\n            className={s.searchForm__input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.searchQuery}\n            onChange={this.handleNameChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport s from './ImageGalleryItem.module.css';\n\nexport default function ImageGalleryItem({ images, onOpenModal }) {\n  return images.map(({ webformatURL, tags, largeImageURL }) => (\n    <li className={s.item} key={shortid()}>\n      <img\n        src={webformatURL}\n        alt={tags}\n        data-source={largeImageURL}\n        onClick={onOpenModal}\n        className={s.image}\n      />\n    </li>\n  ));\n}\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.arrayOf(\n    PropTypes.shape({\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      tags: PropTypes.string,\n    }),\n  ),\n  onOpenModal: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nexport default function ImageGallery({ images, onOpenModal }) {\n  return (\n    <ul className={s.gallery}>\n      <ImageGalleryItem images={images} onOpenModal={onOpenModal} />\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  onOpenModal: PropTypes.func.isRequired,\n};\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './Loader.module.css';\n\nexport default function Spinner() {\n  return (\n    <div className={s.loader}>\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#046d12\"\n        height={60}\n        width={60}\n        timeout={4000}\n      />\n    </div>\n  );\n}\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nexport default class Modal extends Component {\n  static propTypes = {\n    onCloseModal: PropTypes.func.isRequired,\n    largeModalImg: PropTypes.string.isRequired,\n    onClickByEscape: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.closeModalByEscape);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.closeModalByEscape);\n  }\n\n  closeModalByEscape = e => {\n    if (e.key !== 'Escape') {\n      return;\n    }\n    this.props.onClickByEscape();\n  };\n  render() {\n    const { largeModalImg, onCloseModal } = this.props;\n    return (\n      <div className={s.overlay} onClick={onCloseModal}>\n        <div className={s.modal}>\n          <img src={largeModalImg} alt=\"\" />\n        </div>\n      </div>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nexport default function Button({ text, onClick }) {\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: 'smooth',\n  });\n  return (\n    <button type=\"submit\" className={s.button} onClick={onClick}>\n      {text}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Loader from './components/Loader';\nimport Modal from './components/Modal';\nimport Button from './components/Button';\nimport fetchImages from './components/APIservice';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n  static propTypes = {\n    page: PropTypes.number,\n    status: PropTypes.string,\n    error: PropTypes.string,\n    largeImage: PropTypes.string,\n    isOpenModal: PropTypes.bool,\n  };\n\n  state = {\n    searchQuery: '',\n    images: [],\n    page: null,\n    status: 'idle',\n    error: null,\n    largeImage: '',\n    isOpenModal: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { searchQuery, page } = this.state;\n    if (searchQuery !== prevState.searchQuery || page !== prevState.page) {\n      this.setState({ status: 'pending' });\n      fetchImages(searchQuery, page)\n        .then(images => {\n          this.setState(prevState => ({\n            images: [...prevState.images, ...images.hits],\n            status: 'resolved',\n          }));\n          if (this.state.page !== 1) {\n            window.scrollTo({\n              top: document.documentElement.scrollHeight,\n              behavior: 'smooth',\n            });\n          }\n        })\n        .catch(error => this.setState({ error, status: 'rejected' }));\n    }\n  }\n\n  handleSearchbarSubmit = searchQuery => {\n    this.setState({ searchQuery, images: [], page: 1 });\n  };\n\n  onLoadMoreClick = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n  };\n\n  handleCloseModal = e => {\n    if (e.target.nodeName === 'IMG') {\n      return;\n    }\n    this.setState({\n      isOpenModal: false,\n      largeImage: '',\n    });\n  };\n\n  handleCloseModalByEscape = () => {\n    this.setState({ isOpenModal: false, largeImage: '' });\n  };\n\n  handleOpenModal = e => {\n    this.setState({ isOpenModal: true, largeImage: e.target.dataset.source });\n  };\n\n  render() {\n    const { images, status, isOpenModal, largeImage, error } = this.state;\n\n    return (\n      <div>\n        <Searchbar onSubmit={this.handleSearchbarSubmit} />\n\n        <ImageGallery images={images} onOpenModal={this.handleOpenModal} />\n\n        {status === 'pending' && <Loader />}\n        {images.length !== 0 && (\n          <Button text=\"Load more\" onClick={this.onLoadMoreClick} />\n        )}\n\n        {status === 'rejected' && <h1>{error.message}</h1>}\n\n        {isOpenModal && (\n          <Modal\n            largeModalImg={largeImage}\n            onCloseModal={this.handleCloseModal}\n            onClickByEscape={this.handleCloseModalByEscape}\n          />\n        )}\n\n        <ToastContainer\n          position=\"top-center\"\n          autoClose={3000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const API_KEY = '23107391-e229b72ce50d9e428f6df8953';\nconst BASE_URL = 'https://pixabay.com/api/?';\n\nexport default function fetchImages(searchQuery, page) {\n  return fetch(\n    `${BASE_URL}q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`No image with query ${searchQuery}`));\n  });\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__2H4q6\",\"searchForm\":\"Searchbar_searchForm__2Oqw5\",\"searchForm__button\":\"Searchbar_searchForm__button__JyILk\",\"searchForm__button_label\":\"Searchbar_searchForm__button_label__1vWBT\",\"searchForm__input\":\"Searchbar_searchForm__input__1jpZN\"};"],"sourceRoot":""}